# Generated by Django 3.0.6 on 2020-05-15 09:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'activity_types',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=2000)),
                ('image_url', models.CharField(max_length=2000)),
                ('file_source', models.CharField(max_length=2000)),
                ('running_time', models.TimeField()),
            ],
            options={
                'db_table': 'contents',
            },
        ),
        migrations.CreateModel(
            name='ContentRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'content_ratings',
            },
        ),
        migrations.CreateModel(
            name='ContentReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.CharField(max_length=2000)),
                ('write_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'content_reviews',
            },
        ),
        migrations.CreateModel(
            name='ContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'meditation_types',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=50)),
                ('course_info', models.CharField(max_length=2000)),
            ],
            options={
                'db_table': 'courses',
            },
        ),
        migrations.CreateModel(
            name='CourseContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_title', models.CharField(max_length=100)),
                ('lesson_describe', models.CharField(max_length=2000)),
            ],
            options={
                'db_table': 'course_contents',
            },
        ),
        migrations.CreateModel(
            name='CourseRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'course_ratings',
            },
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.CharField(max_length=2000)),
                ('write_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'course_reviews',
            },
        ),
        migrations.CreateModel(
            name='EndCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'end_categories',
            },
        ),
        migrations.CreateModel(
            name='EndContentTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'end_content_tags',
            },
        ),
        migrations.CreateModel(
            name='MiddleCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'middle_categories',
            },
        ),
        migrations.CreateModel(
            name='MiddleContentTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'middle_content_tags',
            },
        ),
        migrations.CreateModel(
            name='PlayList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('describe', models.CharField(max_length=2000)),
                ('pick', models.BooleanField()),
            ],
            options={
                'db_table': 'play_lists',
            },
        ),
        migrations.CreateModel(
            name='RootCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'root_categories',
            },
        ),
        migrations.CreateModel(
            name='TagList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tag_lists',
            },
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'targets',
            },
        ),
        migrations.CreateModel(
            name='TagGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('play_list', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.PlayList')),
                ('tag_list', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.TagList')),
            ],
            options={
                'db_table': 'tag_groups',
            },
        ),
        migrations.CreateModel(
            name='PlayListGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.Content')),
                ('play_list', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.PlayList')),
            ],
            options={
                'db_table': 'play_list_groups',
            },
        ),
        migrations.CreateModel(
            name='PlayListFollower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('play_list', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.PlayList')),
            ],
            options={
                'db_table': 'play_list_followers',
            },
        ),
    ]
